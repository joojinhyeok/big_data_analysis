# 3유형 문제
# ------------------------------------------------------------------
# 제공된 데이터(bcc.csv)는 암 환자와 정상인의 리지스틴 수치에 대한 자료이며,
# 두 집단의 로그 리지스틴 값에 차이가 있는지를 검정하려고 한다.
# 소문항별로 답을 구한 후, [제출 형식]에 맞춰 제출하시오.
# ------------------------------------------------------------------
import pandas as pd
import numpy as np
from scipy import stats

df = pd.read_csv("data/bcc.csv")
# ------------------------------------------------------------------
# (1) 두 집단의 로그 리지스틴 값의 분산에 차이가 있는지를 알아보기 위해
#     F-검정을 수행할 때 검정통계량의 값을 구해라
#     (단, 분자의 자유도가 분모의 자유도보다 크도록 해라)
# ------------------------------------------------------------------
# 로그 변환: 리지스틴 값의 분포를 정규분포에 가깝게 만들기 위해 log 변환
df['log_resistin'] = np.log(df['Resistin'])

# 그룹나누기
group1 = df[df['Classification']==1]['log_resistin'] # 정상인
group2 = df[df['Classification']==2]['log_resistin'] # 암 환자

# 분산 연산
# 표본 분산 계산 (ddof=1 필수)
var1 = np.var(group1, ddof=1)
var2 = np.var(group2, ddof=1)

# F-통계량 연산(분자의 자유도가 더 크도록 크기를 기준으로 분자/분모 결정)
if var1 >= var2:
	f_stat = var1/var2
else:
	f_stat = var2/var1

print('F-통계량: ', round(f_stat, 3))	# 답: 1.348 출력
# ==> F-통계량이 1에 가까우면 → 두 집단의 분산이 비슷하다.
# ==> F-검정에서 귀무가설: "두 집단의 분산이 같다"
#    → F값이 1에 가까우면 귀무가설을 채택할 가능성이 높다.

# ------------------------------------------------------------------
# (2) 두 집단의 로그 리지스틴 값에 대한 합동 분산 추정량을 구하여라
#     -> [제출 형식] 반올림하여 소수 셋째 자리까지 작성
# ------------------------------------------------------------------
# 표본 크기 연산
n1 = len(group1)
n2 = len(group2)

# print(n1) --> 52
# print(n2) --> 64

# 합동 분산 추정량 연산
pool_var = ((n1-1)*var1 + (n2-1)*var2) / (n1+n2-2)
print('합동 분산 추정량: ', round(pool_var,3))	# 답: 0.449 출력

#  ------------------------------------------------------------------
# (3) (2)번 문제에서 구한 합동 분산 추정량을 이용하여 두 집단의 로그
#      리지스틴 값에 유의미한 차이가 있는지 독립표본 t-검정을 수행하고
#      p-값을 구하여라
# ------------------------------------------------------------------

# 표본평균연산
mean1 = np.mean(group1)
mean2 = np.mean(group2)

# 자유도 연산
# 합동 분산 자유도를 구하기 위해 그룹1과 그룹2의 자유도를 합쳐서 사용
total_df = n1 + n2 - 2

t_stat = (mean1-mean2) / np.sqrt(pool_var*(1/n1+1/n2))
print('T-통계량: ', round(t_stat, 3))	# -0.329 출력

# p-value 연산
# 양측검정 p-value에서 2를 곱하는 이유는?
# -> 양쪽 꼬리를 모두 고려하기 때문
p_val = 2*(1-stats.t.cdf(abs(t_stat), total_df))
print('p-value: ', round(p_val, 3))	# 답: 0.003 출력
# ==> p-value가 0.05보다 작으므로 → 귀무가설 기각
# ==> 즉, 두 집단의 평균(log_resistin)은 유의미하게 다르다 → 대립가설 채택