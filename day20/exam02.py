# 3유형 문제
# ------------------------------------------------------------------
# 제공된 데이터(bcc.csv)는 암 환자와 정상인의 리지스틴 수치에 대한 자료이며,
# 두 집단의 로그 리지스틴 값에 차이가 있는지를 검정하려고 한다.
# 소문항별로 답을 구한 후, [제출 형식]에 맞춰 제출하시오.
# ------------------------------------------------------------------
import pandas as pd
import numpy as np
from scipy import stats

df = pd.read_csv("data/bcc.csv")

# ------------------------------------------------------------------
# (1) 두 집단의 로그 리지스틴 값의 분산에 차이가 있는지를 알아보기 위해
#     F-검정을 수행할 때 검정통계량의 값을 구해라
#     (단, 분자의 자유도가 분모의 자유도보다 크도록 해라)
# ------------------------------------------------------------------
# 로그변환
df['log_resistin'] = np.log(df['Resistin'])

# 그룹 분할
group1 = df[df['Classification']==1]['log_resistin']
group2 = df[df['Classification']==2]['log_resistin']

# -------------------------------------------
# var1 = np.var(group1, ddof=1)
# var2 = np.var(group2, ddof=1)
# 위 형태로 var()을 하면 뒤에 자유도를 1빼줘야함
# -------------------------------------------
#  아래 형태는 자동으로 자유도 1이 빠짐
var1 = group1.var()
var2 = group2.var()
# -------------------------------------------

# 분자와 분모 자유도 비교를 위한 자유도 계산
# 자유도 = 데이터 개수 - 1
dof1 = len(group1) - 1	# ==> 51
dof2 = len(group2) - 1	# ==> 63
# print(dof1, dof2)

# exam01에서는 if문 사용했지만, exam02에서는 print로 자유도 비교 후 나눠줌 
f_stat = var2 / var1    
print('1번 문제: ', round(f_stat, 3))


# ------------------------------------------------------------------
# (2) 두 집단의 로그 리지스틴 값에 대한 합동 분산 추정량을 구하여라
#     -> [제출 형식] 반올림하여 소수 셋째 자리까지 작성
# ------------------------------------------------------------------
# 합동 분산 추정량
n1 = len(group1)
n2 = len(group2)

pool_var = ((n1-1)*var1 + (n2-1)*var2) / (n1+n2-2)
print('2번 문제: ', round(pool_var, 3))

#  ------------------------------------------------------------------
# (3) (2)번 문제에서 구한 합동 분산 추정량을 이용하여 두 집단의 로그
#      리지스틴 값에 유의미한 차이가 있는지 독립표본 t-검정을 수행하고
#      p-값을 구하여라
# ------------------------------------------------------------------
# T-통계량
mean1 = group1.mean()
mean2 = group2.mean()

t_stat = (mean1 - mean2) / np.sqrt(pool_var*(1/n1+1/n2))

# cdf: 누적밀도함수
# t-통계량이 음수일 수 있으므로, abs()로 절댓값 처리 후 누적분포 계산
p_val = 2*(1-stats.t.cdf(abs(t_stat), df=n1+n2-2))

print('3번 문제: ', round(p_val, 3))

# 3유형 3번 쉽게 푸는법..ttest_ind()
# ttest_ind()는 (통계량, p값)을 튜플로 반환함
ttest_result = stats.ttest_ind(group1, group2, equal_var=True)
print(ttest_result)


