# 모의고사 1회 1유형

import pandas as pd

df = pd.read_csv('https://raw.githubusercontent.com/Datamanim/datarepo/main/bank/train.csv')


# print(df.info())
# ----------------------------------------------------------------------------------------------------------------
# 1번
# 마케팅 응답 고객들의 나이를 10살 단위로 변환 했을 때, 가장 많은 인원을 가진 나이대는? (0~9 : 0 , 10~19 : 10)
# print(df['age'])
# ----------------------------------------------------------------------------------------------------------------
# result = (df.age//10 *10).value_counts().index[0]
# print(result)

# ----------------------------------------------------------------------------------------------------------------
# 2번
# 마케팅 응답 고객들의 나이를 10살 단위로 변환 했을 때, 가장 많은 나이대 구간의 인원은 몇명인가

# result = (df.age//10 * 10).value_counts().iloc[0]   # iloc[0]랑 values[0]
# print(result)
# ----------------------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------------------
# 3번
# 나이가 25살 이상 29살 미만인 응답 고객들중 housing컬럼의 값이 yes인 고객의 수는?

# condition = (df['age'] >= 25) & (df['age'] < 29)
# df = df[condition]
# result = df[df['housing'] == 'yes']
# print(len(result))
# ----------------------------------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------------------------------
# 4번
# numeric한 값을 가지지 않은 컬럼들중 unique한 값을 가장 많이 가지는 컬럼은?
# 범주형 중 unique 값을 가장 많이 가지는 컬럼은?
#  job        12870 non-null  object
#  marital    12870 non-null  object
#  education  12870 non-null  object
#  default    12870 non-null  object
#  housing    12870 non-null  object
#  loan       12870 non-null  object
#  contact    12870 non-null  object
#  month      12870 non-null  object
#  poutcome   12870 non-null  object
#  y          12870 non-null  object

# print(len(df['job'].unique()))
# print(len(df['month'].unique()))

# print('job, month')

# ----------------------------------------------------------------------------------------------------------------
# 5번
# balance 컬럼값들의 평균값 이상을 가지는 데이터를 ID값을 기준으로 내림차순 정렬했을때 상위 100개 데이터의 balance값의 평균은?
# ----------------------------------------------------------------------------------------------------------------
# result = df[df['balance'] >= df['balance'].mean()].sort_values(by='ID', ascending=False).head(100)['balance'].mean()

# print(result)

# ----------------------------------------------------------------------------------------------------------------
# 6번
# 가장 많은 광고를 집행했던 날짜는 언제인가? (데이터 그대로 일(숫자),달(영문)으로 표기)
# ----------------------------------------------------------------------------------------------------------------
# month / day
# result = df[['day', 'month']].value_counts().index[0]
# print(result)

# ----------------------------------------------------------------------------------------------------------------
# 7번
# 데이터의 job이 unknown 상태인 고객들의 age 컬럼 값의 정규성을 검정하고자 한다. 샤피로 검정의 p-value값을 구하여라
# ---------------------------------------------------------------------------------------------------------------- 
# from scipy.stats import shapiro

# result = shapiro(df[df['job'] == 'unknown']['age'])
# print(result.pvalue)

# ----------------------------------------------------------------------------------------------------------------
# 8번
# age와 balance의 상관계수를 구하여라
# ---------------------------------------------------------------------------------------------------------------- 
# result = df[['age', 'balance']].corr()
# print(result) -> 0.101987

result = df[['age', 'balance']].corr().iloc[0,1]
print(result)   # 0.10198734763981462

